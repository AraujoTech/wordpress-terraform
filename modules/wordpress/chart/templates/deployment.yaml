apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
    # Configurar o init container para mover os arquivos
      initContainers: 
      containers:
      - image: {{ .Values.image}}:{{ .Values.wordpressVersion}}
        name: wordpress
        env:
        - name: WORDPRESS_DATABASE_HOST
          value: {{ .Values.databaseHost }}
        - name: WORDPRESS_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databaseSecret }}
              key: password
        - name: WORDPRESS_DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databaseSecret }}
              key: user
        - name: WORDPRESS_PLUGINS
          value: {{.Values.plugins}}
        - name: WORDPRESS_DATABASE_NAME
          value: wordpress
        #configurar as variáveis do Redis
        ports:
        - containerPort: {{.Values.port}}
          name: wordpress
        # Criar e montar o volume emptydir{}
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      # Criar post hook para dar permissão de leitura e escrita recursiva pra pasta /var/www/html 
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-pv-claim