wordpress:
# -- Imagem docker usada para o deployment do wordpress. Para este projeto foi desenvolvida uma imagem personalizada do wordpress com PG4WP configurado e as configurações necessárias para o uso do Redis. Para mais informações consulte  https://github.com/AraujoTech/wordpress-postgres
  image: rafaelmendonca29/wordpress-postgres

# -- Tag da imagem da imagem do wordpress utilizada, a mesma deve conter o PG4WP. Para mais informações consulte https://github.com/PostgreSQL-For-Wordpress/postgresql-for-wordpress 
  tag: "6.3-php8.2-apache-redis"

# -- Porta usada para acesso ao wordpress
  port: 80

postgres:
# -- Host para conexão com o banco de dados
  host:

# -- Nome da secret que armazenará as informações do banco de dados
  secret: postgres-keys

# -- Porta usada para acesso ao postgres
  port: 5432
# -- Nome do Banco de dados
  db: wordpress


redis:
  # -- Host para conexão com o banco de dados
  host:

  # -- Porta usada para acesso ao mysql
  port: 6379
  # -- Banco de Dados usado pelo cache: 0-15
  db: 1

resources:
  requests:
    # -- Especifica a quantidade mínima de CPU que cada pod do contêiner deve ter disponível. As unidades de medida para CPU são milicores (m).
    cpu: 256m
    # -- Especifica a quantidade mínima de memória que cada pod do contêiner deve ter disponível. As unidades de medida para memória são bytes (B), kibibytes (Ki), mebibytes (Mi), etc.
    memory: 256Mi
  limits:
    # -- Especifica o máximo de CPU que cada pod do contêiner pode consumir.
    cpu: 512m
    # -- Especifica o máximo de memória que cada pod do contêiner pode consumir.
    memory: 512Mi

# -- O Horizontal Pod Autoscaler (HPA) é um recurso no Kubernetes que ajusta automaticamente o número de réplicas de um Deployment, ReplicaSet ou StatefulSet com base na utilização de recursos ou métricas personalizadas, garantindo uma escalabilidade dinâmica para atender às demandas variáveis.
hpa:
# -- Minimo de réplicas dos pods
  min_replicas: 1
# -- Máximo de réplicas dos pods
  max_replicas: 5
